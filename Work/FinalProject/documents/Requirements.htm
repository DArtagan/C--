<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="robots" content="index,nofollow">

<title>FinalProject/Requirements - CSCI261 Course Pages</title>
<script type="text/javascript" src="Requirements_files/common.js"></script>

<script type="text/javascript">
<!--
var search_hint = "Search";
//-->
</script>


<link rel="stylesheet" type="text/css" charset="utf-8" media="all" href="Requirements_files/common.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="screen" href="Requirements_files/screen.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="print" href="Requirements_files/print.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="projection" href="Requirements_files/projection.css">

<!-- css only for MS IE6/IE7 browsers -->
<!--[if lt IE 8]>
   <link rel="stylesheet" type="text/css" charset="utf-8" media="all" href="/moin_static192/modern/css/msie.css">
<![endif]-->





<link rel="Start" href="https://csci261.mines.edu/csci261/csci261HomePage">
<link rel="Alternate" title="Wiki Markup" href="https://csci261.mines.edu/csci261/FinalProject/Requirements?action=raw">
<link rel="Alternate" media="print" title="Print View" href="https://csci261.mines.edu/csci261/FinalProject/Requirements?action=print">
<link rel="Up" href="https://csci261.mines.edu/csci261/FinalProject">
<link rel="Search" href="https://csci261.mines.edu/csci261/FindPage">
<link rel="Index" href="https://csci261.mines.edu/csci261/TitleIndex">
<link rel="Glossary" href="https://csci261.mines.edu/csci261/WordIndex">
<link rel="Help" href="https://csci261.mines.edu/csci261/HelpOnFormatting">
</head>

<body dir="ltr" lang="en">

<div id="header">


<form id="searchform" method="get" action="/csci261/FinalProject/Requirements">
<div>
<input name="action" value="fullsearch" type="hidden">
<input name="context" value="180" type="hidden">
<label style="display: none;" for="searchinput">Search:</label>
<input class="disabled" id="searchinput" name="value" value="Search" size="20" onfocus="searchFocus(this)" onblur="searchBlur(this)" onkeyup="searchChange(this)" onchange="searchChange(this)" alt="Search" type="text">
<input disabled="disabled" id="titlesearch" name="titlesearch" value="Titles" alt="Search Titles" type="submit">
<input disabled="disabled" id="fullsearch" name="fullsearch" value="Text" alt="Search Full Text" type="submit">
</div>
</form>
<script type="text/javascript">
<!--// Initialize search form
var f = document.getElementById('searchform');
f.getElementsByTagName('label')[0].style.display = 'none';
var e = document.getElementById('searchinput');
searchChange(e);
searchBlur(e);
//-->
</script>

<ul id="username"><li><a href="https://csci261.mines.edu/csci261/FinalProject/Requirements?action=login" id="login" rel="nofollow">Login</a></li></ul>
<div id="locationline">
<div id="interwiki"><span><a href="https://csci261.mines.edu/csci261/csci261HomePage" rel="nofollow">csci261</a></span></div>

<ul id="pagelocation">
<li><a href="https://csci261.mines.edu/csci261/FinalProject">FinalProject</a></li><li><a class="backlink" href="https://csci261.mines.edu/csci261/FinalProject/Requirements?action=fullsearch&amp;context=180&amp;value=linkto%3A%22FinalProject%2FRequirements%22" rel="nofollow" title="Click to do a full-text search for this title">Requirements</a></li>
</ul>

</div>


<ul id="navibar">
<li class="wikilink"><a href="https://csci261.mines.edu/csci261/RecentChanges">RecentChanges</a></li><li class="wikilink"><a href="https://csci261.mines.edu/csci261/FindPage">FindPage</a></li><li class="wikilink"><a href="https://csci261.mines.edu/csci261/HelpContents">HelpContents</a></li><li class="current"><a href="https://csci261.mines.edu/csci261/FinalProject/Requirements">Requirements</a></li>
</ul>

<div id="pageline"><hr style="display:none;"></div>


</div>

<div id="page" dir="ltr" lang="en">
<div dir="ltr" id="content" lang="en"><span class="anchor" id="top"></span>
<span class="anchor" id="line-1"></span><span class="anchor" id="line-2"></span><p class="line867">
</p><h1 id="Basic_Project_Requirements">Basic Project Requirements</h1>
<span class="anchor" id="line-3"></span><span class="anchor" id="line-4"></span><p class="line867"><span class="anchor" id="basic"></span>To ensure that you are applying your knowledge of various C++ constructs, your program must meet the following criteria. <span class="anchor" id="line-5"></span><span class="anchor" id="line-6"></span></p><ol type="1"><li><p class="line862">Your program must make use of at least one <strong>new</strong> class with the following characteristics: <span class="anchor" id="line-7"></span></p><ul><li>At least one non-default constructor, <span class="anchor" id="line-8"></span></li><li><p class="line862">At least two (<tt class="backtick">private</tt>) data members, <span class="anchor" id="line-9"></span></p></li><li><p class="line862">Symmetric<sup><a href="#fnref-871f73eec44bc955ffe3ddb970a77ea5117b46d3" id="fndef-871f73eec44bc955ffe3ddb970a77ea5117b46d3-0">1</a></sup> overloaded <tt class="backtick">&gt;&gt;</tt> and <tt class="backtick">&lt;&lt;</tt> operators. <span class="anchor" id="line-10"></span><span class="anchor" id="line-11"></span></p></li></ul></li><li class="gap"><p class="line891"><span class="anchor" id="array-requirement"></span>Your
 program must make use of at least one array.  It may hold class objects
 or fundamental data types.  It may be a data member of a class, or an 
array of data in a global function (such as <tt class="backtick">main</tt> routine). <span class="anchor" id="line-12"></span></p></li><li>Your program must make use of disk file I/O; data must be read from disk or written to disk. <span class="anchor" id="line-13"></span></li><li><p class="line891"><span class="anchor" id="alacarte-requirement"></span>Your program must fulfill at least 15 points worth of "a la carte" requirements (<a href="https://csci261.mines.edu/csci261/FinalProject/Requirements#alacarte">see below</a>). <span class="anchor" id="line-14"></span></p></li><li>Your submitted program must compile and execute. <span class="anchor" id="line-15"></span></li><li><p class="line891"><span class="anchor" id="commentary-requirement"></span>Your project must make use of ample commenting. <span class="anchor" id="line-16"></span></p></li><li>Your project must include documentation on the use and function of your program. <span class="anchor" id="line-17"></span><span class="anchor" id="line-18"></span></li></ol><p class="line867">
</p><h2 id="Other_.28a_la_Carte.29_Requirements">Other (a la Carte) Requirements</h2>
<span class="anchor" id="line-19"></span><p class="line867"><span class="anchor" id="alacarte"></span> <span class="anchor" id="line-20"></span>Each
 use of a C++ construct is assigned a point value, your application must
 accumulate a certain number of these points to meet the <a href="https://csci261.mines.edu/csci261/FinalProject/Requirements#alacarte-requirement">basic project requirements</a>.
  By the end of development, your application may have accumulated more 
points than are needed.  You are encouraged to document all the "a la 
carte" points earned by your application. <span class="anchor" id="line-21"></span><span class="anchor" id="line-22"></span></p><p class="line862">The point system assigned to these C++ constructs <strong>is not</strong>
 used for grading --- it is used only to determine if your submitted 
final project has met the threshold of complexity required.  Note also 
that you may not "double count" <a href="https://csci261.mines.edu/csci261/FinalProject/Requirements#basic">the basic requirements above</a> as part of your projects "a la carte" point projects. <span class="anchor" id="line-23"></span><span class="anchor" id="line-24"></span></p><p class="line862">The <strong>Max Occurrances</strong>
 column below is the maximum number of times you may count one of the "a
 la carte" requirements, if the requirement overlaps with a <a href="https://csci261.mines.edu/csci261/FinalProject/Requirements#baseic">basic requirement</a>, then the basic requirement does not count towards the max.  Examples: <br>
 <span class="anchor" id="line-25"></span><span class="anchor" id="line-26"></span></p><ul><li><p class="line862">You may accumulate only 2 "a la carte" points for <a href="https://csci261.mines.edu/csci261/FinalProject/Requirements#user-specififed-names">user specified file names</a>
 in two different places in your code.  You may use user specified file 
names as many times as you want, but only 2 "a la carte" points (<tt class="backtick">1x2</tt>) may be earned. <span class="anchor" id="line-27"></span></p></li><li><p class="line862">You may incorporate 5 or more different 1d arrays (holding fundamental data types) in your program.  One of them will meet the <a href="https://csci261.mines.edu/csci261/FinalProject/Requirements#array-requirement">basic array requirement</a>, another three will earn 9 (<tt class="backtick">3x3</tt>) "a la carte" points from <a href="https://csci261.mines.edu/csci261/FinalProject/Requirements#fundamental-array-alacarte">the "a la carte" array requirements</a>.  The remaining array will not count toward "a la carte" points. <span class="anchor" id="line-28"></span><span class="anchor" id="line-29"></span></p></li></ul><div><table><tbody><tr style="background-color: rgb(224, 224, 224);">  <td><p class="line891"><strong>Points Each</strong> </p></td>
  <td><p class="line862"> <strong>Max Occurrances</strong> </p></td>
  <td><p class="line862"> <strong>C++ Construct</strong>                                   </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-30"></span><p class="line862"> 2 </p></td>
  <td><p class="line862"> 4 </p></td>
  <td><p class="line862"> Use <tt class="backtick">static&nbsp;const</tt> variables as class data members. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-31"></span><p class="line862"> 1 </p></td>
  <td><p class="line862"> 3 </p></td>
  <td><p class="line862"> Each additional (non-<tt class="backtick">const</tt>) class data member. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-32"></span><p class="line862"> 1 </p></td>
  <td><p class="line862"> 5 </p></td>
  <td><p class="line862"> Each <strong>properly</strong> implemented accessor function (a "setter" or "getter" ) </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-33"></span><p class="line862"> 2 </p></td>
  <td><p class="line862"> 4 </p></td>
  <td><p class="line862"> Each (non-accessor, non-constructor, non-input, non-output) class member function; helper functions included. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-34"></span><p class="line862"> 3 </p></td>
  <td><p class="line862"> 3 </p></td>
  <td><p class="line862"> Read or write data to disk using an operator-overloaded function. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-35"></span><p class="line862"> 5 </p></td>
  <td><p class="line862"> 2 </p></td>
  <td><p class="line862"> Incorporate another non-trivial<sup><a href="#fnref-56e83aec9c246050d8abf93361e3fd05b6f72681" id="fndef-56e83aec9c246050d8abf93361e3fd05b6f72681-1">2</a></sup> <strong>new</strong> class into your program design. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-36"></span><p class="line862"> 2 </p></td>
  <td><p class="line862"> 5 </p></td>
  <td><p class="line862"> Overload arithmetic or Boolean operators using <tt class="backtick">friend</tt> functions of a class.  A group of similar<sup><a href="#fnref-1b18f8e5e980f1b66c457587d9a8171a69e0bfe0" id="fndef-1b18f8e5e980f1b66c457587d9a8171a69e0bfe0-2">3</a></sup> operators count as only one. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-37"></span><p class="line862"> 1 </p></td>
  <td><p class="line862"> 3 </p></td>
  <td><p class="line862"> <span class="anchor" id="overload-alacarte"></span>Use non-operator overloaded global or member functions.  Each <strong>function name</strong> overloaded counts as a point --- <strong>NOT</strong> the number of times it is overloaded. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-38"></span><p class="line862"> 2 </p></td>
  <td><p class="line862"> 3 </p></td>
  <td><p class="line862"> <span class="anchor" id="io-alacarte"></span>Read or write data to disk using a non-operator-overloaded class member function (such as <tt class="backtick">input()</tt> or <tt class="backtick">output()</tt>). </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-39"></span><p class="line862"> 1 </p></td>
  <td><p class="line862"> 3 </p></td>
  <td><p class="line862"> <span class="anchor" id="fundamental-array-alacarte"></span>Use a 1d array of fundamental types in a global function or as a class data member. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-40"></span><p class="line862"> 2 </p></td>
  <td><p class="line862"> 3 </p></td>
  <td><p class="line862"> Use a 1d array of C++ objects (perhaps your own) in a global function or as a class data member. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-41"></span><p class="line862"> 2 </p></td>
  <td><p class="line862"> 3 </p></td>
  <td><p class="line862"> Use a multidimensional array of a fundamental data type in a global function or as a class data member. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-42"></span><p class="line862"> 3 </p></td>
  <td><p class="line862"> 3 </p></td>
  <td><p class="line862"> Use a multidimensional array of C++ objects in a global function or as a class data member. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-43"></span><p class="line862"> 1 </p></td>
  <td><p class="line862"> 4 </p></td>
  <td><p class="line862"> Use <tt class="backtick">const</tt> variables in a global function (or globablly defined in a header file). </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-44"></span><p class="line862"> 2 </p></td>
  <td><p class="line862"> 5 </p></td>
  <td><p class="line862"> Allocate and deallocate dynamic memory for a 1 dimensional class whose size is determined at runtime. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-45"></span><p class="line862"> 1 </p></td>
  <td><p class="line862"> 2 </p></td>
  <td><p class="line862"> Incorporate user-specified filenames into your project (as opposed to hard-coded filenames). </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-46"></span><p class="line862"> 2 </p></td>
  <td><p class="line862"> 2 </p></td>
  <td><p class="line862"> Sort a 1 dimensional array of fundamental types. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-47"></span><p class="line862"> 3 </p></td>
  <td><p class="line862"> 2 </p></td>
  <td><p class="line862"> Sort a 1 dimensional array of your own C++ objects. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-48"></span><p class="line862"> 4 </p></td>
  <td><p class="line862"> 1 </p></td>
  <td><p class="line862"> Sort a mulitdimensional array (sorting the 
rows of 2d array, based on the first column values, and carrying along 
all the other column values with each row swap). </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-49"></span><p class="line862"> 2 </p></td>
  <td><p class="line862"> 2 </p></td>
  <td><p class="line862"> Use binary search in your design. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-50"></span><p class="line862"> 3 </p></td>
  <td><p class="line862"> 1 </p></td>
  <td><p class="line862"> Shuffle (randomize) a 1 dimensional array using <a href="https://csci261.mines.edu/csci261/C%2B%2BPatterns/FisherYates">the Fisher-Yates</a> algorithm.<sup><a href="#fnref-98ca717ea334acb96f582febfcd5faf02324b07d" id="fndef-98ca717ea334acb96f582febfcd5faf02324b07d-3">4</a></sup> </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-51"></span><p class="line862"> 3 </p></td>
  <td><p class="line862"> 1 </p></td>
  <td><p class="line862"> Incorporate randomness into your application by using <tt class="backtick">rand()</tt> and <tt class="backtick">srand()</tt> <strong>properly</strong>.<sup><a href="#fnref-f81d3a80590e8f62f250efd94b02fc5008dc08db" id="fndef-f81d3a80590e8f62f250efd94b02fc5008dc08db-4">5</a></sup><sup><a href="#fnref-27474a95835da7e980e10eed1847f706d1591451" id="fndef-27474a95835da7e980e10eed1847f706d1591451-5">6</a></sup> </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-52"></span><p class="line862"> 2 </p></td>
  <td><p class="line862"> 1 </p></td>
  <td><p class="line862"> Scan the disk for a runtime determined set of files to be processed by your application. Ask your instructor about <tt class="backtick">system(&nbsp;"dir&nbsp;/b&nbsp;*.dat&nbsp;&gt;&nbsp;the_file_list.txt"&nbsp;);</tt> </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-53"></span><p class="line862"> 1 </p></td>
  <td><p class="line862"> 2 </p></td>
  <td><p class="line862"> Use a <tt class="backtick">switch</tt> statement with at least one <tt class="backtick">case</tt> and a <tt class="backtick">default</tt> block. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-54"></span><p class="line862"> 1 </p></td>
  <td><p class="line862"> 2 </p></td>
  <td><p class="line862"> Use a <tt class="backtick">do-while</tt> loop. </p></td>
</tr>
<tr>  <td><span class="anchor" id="line-55"></span><p class="line862"> 1 </p></td>
  <td><p class="line862"> 2 </p></td>
  <td><p class="line862"> Use the ternary operator (<tt class="backtick">...&nbsp;?&nbsp;...&nbsp;:&nbsp;...&nbsp;</tt>). </p></td>
</tr>
</tbody></table></div><span class="anchor" id="line-56"></span><span class="anchor" id="line-57"></span><p class="line874">You may petition your instructor for additional "a la carte" requirements. They <span class="anchor" id="line-58"></span>are not considered "accepted", however, until they are added to this page. <span class="anchor" id="line-59"></span><span class="anchor" id="line-60"></span></p><p class="line867"><strong> <img alt=":o" src="Requirements_files/redface.png" title=":o" height="15" width="15">
 NOTE: All the code that meets the criteria above  must be written by 
you and your partner. You are more than welcome to extend your final 
project by writing more code or using code that is available from other 
sources (e.g., the Internet). Any code that you have not written 
yourself must be properly cited.</strong> <span class="anchor" id="line-61"></span><span class="anchor" id="line-62"></span></p><p class="line862">Continue on to <a href="https://csci261.mines.edu/csci261/FinalProject/Part0">Choosing a Partner</a>. <span class="anchor" id="line-63"></span></p><div class="footnotes"><ol><li><p><a id="fnref-871f73eec44bc955ffe3ddb970a77ea5117b46d3"></a><span class="anchor" id="line-1-1"></span>What is written by <tt class="backtick">operator&lt;&lt;</tt> may be read by <tt class="backtick">operator&gt;&gt;</tt>  (<a href="#fndef-871f73eec44bc955ffe3ddb970a77ea5117b46d3-0">1</a>)</p></li><li><p><a id="fnref-56e83aec9c246050d8abf93361e3fd05b6f72681"></a><span class="anchor" id="line-1-2"></span>A non-default constructor, at least two <tt class="backtick">private</tt> data members, an output or input member function using <tt class="backtick">ostream</tt> or <tt class="backtick">istream</tt>  (<a href="#fndef-56e83aec9c246050d8abf93361e3fd05b6f72681-1">2</a>)</p></li><li><p><a id="fnref-1b18f8e5e980f1b66c457587d9a8171a69e0bfe0"></a><span class="anchor" id="line-1-3"></span>Operators
 are considered similar if they can be implemented by essentially one 
operation's logic.  An example might be when addition is commutative (<tt class="backtick">a+b&nbsp;and&nbsp;b+a</tt>) or a Boolean result may be inferred (from <tt class="backtick">a&lt;=b&nbsp;and&nbsp;b&lt;=a</tt> you may infer <tt class="backtick">a==b</tt>)  (<a href="#fndef-1b18f8e5e980f1b66c457587d9a8171a69e0bfe0-2">3</a>)</p></li><li><p><a id="fnref-98ca717ea334acb96f582febfcd5faf02324b07d"></a><span class="anchor" id="line-1-4"></span>Other shuffling algorithms are acceptable <strong>only</strong> if a thorough mathematical proof demonstrating the correctness of the sorting algorithm is provided.  <em>Hint: just use Fisher-Yates.</em>  (<a href="#fndef-98ca717ea334acb96f582febfcd5faf02324b07d-3">4</a>)</p></li><li><p><a id="fnref-f81d3a80590e8f62f250efd94b02fc5008dc08db"></a><span class="anchor" id="line-1-5"></span>Cannot be used as an a la carte point if the only use of <tt class="backtick">rand()</tt> is shuffling an array  (<a href="#fndef-f81d3a80590e8f62f250efd94b02fc5008dc08db-4">5</a>)</p></li><li><p><a id="fnref-27474a95835da7e980e10eed1847f706d1591451"></a><span class="anchor" id="line-1-6"></span>The project must use randomness in some meaningful algorithmic way, simply printing a random number doesn't cut it!  (<a href="#fndef-27474a95835da7e980e10eed1847f706d1591451-5">6</a>)</p></li></ol></div><span class="anchor" id="bottom"></span></div><div id="pagebottom"></div>
</div>


<div id="footer">

<ul id="credits">
<li><a href="http://moinmo.in/" title="This site uses the MoinMoin Wiki software.">MoinMoin Powered</a></li><li><a href="http://moinmo.in/Python" title="MoinMoin is written in Python.">Python Powered</a></li><li><a href="http://moinmo.in/GPL" title="MoinMoin is GPL licensed.">GPL licensed</a></li><li><a href="http://validator.w3.org/check?uri=referer" title="Click here to validate this page.">Valid HTML 4.01</a></li>
</ul>


</div>



</body></html>